// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using data_access;

namespace data_access.Migrations
{
    [DbContext(typeof(DB))]
    [Migration("20220531034311_teacherCourse")]
    partial class teacherCourse
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("CourseTeacher", b =>
                {
                    b.Property<int>("coursesid")
                        .HasColumnType("int");

                    b.Property<int>("teachersid")
                        .HasColumnType("int");

                    b.HasKey("coursesid", "teachersid");

                    b.HasIndex("teachersid");

                    b.ToTable("CourseTeacher");
                });

            modelBuilder.Entity("Model.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("totalTime")
                        .HasColumnType("real");

                    b.Property<int>("videoIntro")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Model.Teacher", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("jensyat")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Model.Teacher_corse", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("courseid")
                        .HasColumnType("int");

                    b.Property<int?>("teacherid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("courseid");

                    b.HasIndex("teacherid");

                    b.ToTable("TeacherCourses");
                });

            modelBuilder.Entity("CourseTeacher", b =>
                {
                    b.HasOne("Model.Course", null)
                        .WithMany()
                        .HasForeignKey("coursesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Teacher", null)
                        .WithMany()
                        .HasForeignKey("teachersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Teacher_corse", b =>
                {
                    b.HasOne("Model.Course", "course")
                        .WithMany()
                        .HasForeignKey("courseid");

                    b.HasOne("Model.Teacher", "teacher")
                        .WithMany()
                        .HasForeignKey("teacherid");

                    b.Navigation("course");

                    b.Navigation("teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
